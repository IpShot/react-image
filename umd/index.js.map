{"version":3,"file":"index.js","sources":["../jsSrc/useImage.js","../jsSrc/Img.js","../jsSrc/imagePromiseFactory.js"],"sourcesContent":["import { useState } from 'react';\nimport imagePromiseFactory from './imagePromiseFactory';\nconst removeBlankArrayElements = (a) => a.filter((x) => x);\nconst stringToArray = (x) => (Array.isArray(x) ? x : [x]);\nconst cache = {};\n// sequential map.find for promises\nconst promiseFind = (arr, promiseFactory) => {\n    let done = false;\n    return new Promise((resolve, reject) => {\n        const queueNext = (src) => {\n            return promiseFactory(src).then(() => {\n                done = true;\n                resolve(src);\n            });\n        };\n        arr\n            .reduce((p, src) => {\n            // ensure we aren't done before enquing the next source\n            return p.catch(() => {\n                if (!done)\n                    return queueNext(src);\n            });\n        }, queueNext(arr.shift()))\n            .catch(reject);\n    });\n};\nexport default function useImage({ srcList, imgPromise = imagePromiseFactory({ decode: true }), useSuspense = true, }) {\n    const [, setIsLoading] = useState(true);\n    const sourceList = removeBlankArrayElements(stringToArray(srcList));\n    const sourceKey = sourceList.join('');\n    if (!cache[sourceKey]) {\n        // create promise to loop through sources and try to load one\n        cache[sourceKey] = {\n            promise: promiseFind(sourceList, imgPromise),\n            cache: 'pending',\n            error: null,\n        };\n    }\n    // when promise resolves/reject, update cache & state\n    cache[sourceKey].promise\n        // if a source was found, update cache\n        // when not using suspense, update state to force a rerender\n        .then((src) => {\n        cache[sourceKey] = { ...cache[sourceKey], cache: 'resolved', src };\n        if (!useSuspense)\n            setIsLoading(false);\n    })\n        // if no source was found, or if another error occured, update cache\n        // when not using suspense, update state to force a rerender\n        .catch((error) => {\n        cache[sourceKey] = { ...cache[sourceKey], cache: 'rejected', error };\n        if (!useSuspense)\n            setIsLoading(false);\n    });\n    if (cache[sourceKey].cache === 'resolved') {\n        return { src: cache[sourceKey].src, isLoading: false, error: null };\n    }\n    if (cache[sourceKey].cache === 'rejected') {\n        if (useSuspense)\n            throw cache[sourceKey].error;\n        return { isLoading: false, error: cache[sourceKey].error, src: undefined };\n    }\n    // cache[sourceKey].cache === 'pending')\n    if (useSuspense)\n        throw cache[sourceKey].promise;\n    return { isLoading: true, src: undefined, error: null };\n}\n//# sourceMappingURL=useImage.js.map","import React from 'react';\nimport useImage from './useImage';\nimport imagePromiseFactory from './imagePromiseFactory';\nconst passthroughContainer = (x) => x;\nexport default function Img({ decode = true, src: srcList = [], loader = null, unloader = null, container = passthroughContainer, loaderContainer = passthroughContainer, unloaderContainer = passthroughContainer, imgPromise, crossorigin, useSuspense = false, ...imgProps // anything else will be passed to the <img> element\n }) {\n    imgPromise =\n        imgPromise || imagePromiseFactory({ decode, crossOrigin: crossorigin });\n    const { src, isLoading } = useImage({\n        srcList,\n        imgPromise,\n        useSuspense,\n    });\n    // console.log({src, isLoading, resolvedSrc, useSuspense})\n    // show img if loaded\n    if (src)\n        return container(React.createElement(\"img\", Object.assign({ src: src }, imgProps)));\n    // show loader if we have one and were still trying to load image\n    if (!useSuspense && isLoading)\n        return loaderContainer(loader);\n    // show unloader if we have one and we have no more work to do\n    if (!useSuspense && unloader)\n        return unloaderContainer(unloader);\n    return null;\n}\n//# sourceMappingURL=Img.js.map","// returns a Promisized version of Image() api\nexport default ({ decode = true, crossOrigin = '' }) => (src) => {\n    return new Promise((resolve, reject) => {\n        const i = new Image();\n        if (crossOrigin)\n            i.crossOrigin = crossOrigin;\n        i.onload = () => {\n            decode && i.decode ? i.decode().then(resolve).catch(reject) : resolve();\n        };\n        i.onerror = reject;\n        i.src = src;\n    });\n};\n//# sourceMappingURL=imagePromiseFactory.js.map"],"names":["useImage","srcList","imgPromise","imagePromiseFactory","decode","useSuspense","useState","setIsLoading","sourceList","removeBlankArrayElements","stringToArray","sourceKey","join","cache","promise","promiseFind","error","then","src","isLoading","Img","loader","unloader","container","passthroughContainer","loaderContainer","unloaderContainer","crossorigin","imgProps","crossOrigin","React","createElement","Object","assign","Promise","resolve","reject","i","Image","onload","onerror","a","filter","x","Array","isArray","arr","promiseFactory","done","queueNext","reduce","p","shift"],"mappings":"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"}